; Startup Sequence for HstWB Self Install
; ---------------------------------------
;
; Date: 2017-01-09
; Author: Henrik Noerfjand Stengaard


; Load patched scsi.device v43.45
LoadModule DEVS:scsi.device


; Clear screen
echo "*ec" 


; Welcome message
echo "HstWB Installer"
echo "---------------"
echo ""
echo "Welcome to HstWB Installer, an installer which automates"
echo "installation of Workbench 3.1, Kickstart roms and packages"
echo "with additional content."
echo ""
echo "As both Workbench adf and Kickstart rom files are still"
echo "under license and sold commercially these files can not"
echo "be included."
echo ""
echo "Please buy Cloanto Amiga Forever from"
echo "https://www.amigaforever.com or use own dumps of"
echo "Workbench adf and Kickstart rom files."
echo ""
ask "Press ENTER to continue"


; Clear screen
echo "*ec" 


; Workbench message
echo "Workbench 3.1 Disk"
echo "------------------"
echo ""
echo "Workbench system files are required for the"
echo "installation process and these will be loaded from"
echo "Workbench 3.1 disk."
echo ""
echo "Floppy device to use will now be autodetected by"
echo "checking if a disk is inserted in any floppy device."


; Print insert Workbench disk
LAB insertworkbenchdisk
echo ""
echo "Please insert Workbench 3.1 Workbench disk in any"
echo "floppy device."
echo ""
ask "Press ENTER to continue"


; Check if disk is present in any floppy device, if not go back to insert workbench disk
echo ""
DiskInDrive DF0:
IF NOT WARN
  set floppydevice "DF0"
  SKIP checkworkbenchdisk
ENDIF
DiskInDrive DF1:
IF NOT WARN
  set floppydevice "DF1"
  SKIP checkworkbenchdisk
ENDIF
DiskInDrive DF2:
IF NOT WARN
  set floppydevice "DF2"
  SKIP checkworkbenchdisk
ENDIF
DiskInDrive DF3:
IF NOT WARN
  set floppydevice "DF3"
  SKIP checkworkbenchdisk
ELSE
  echo "No disk is inserted in any floppy device!"
  SKIP insertworkbenchdisk back
ENDIF


; Check Workbench 3.1 Workbench disk is present in DF0, if not go back to insert workbench disk
LAB checkworkbenchdisk
echo ""
IF NOT EXISTS $floppydevice:C/Which
  echo "Workbench disk is not valid!"
  SKIP insertworkbenchdisk back
ENDIF
IF NOT EXISTS $floppydevice:C/Assign
  echo "Workbench disk is not valid!"
  SKIP insertworkbenchdisk back
ELSE
  $floppydevice:C/Assign >NIL: T: RAM:
ENDIF
IF NOT "`$floppydevice:c/which $floppydevice:`" EQ "Workbench3.1:"
  echo "Workbench disk is not valid!"
  SKIP insertworkbenchdisk back
ENDIF 


; Detected floppy device message
echo "Detected Workbench disk in floppy device $floppydevice:"
wait 3


; Set stack, failat and load basic commands resident 
stack 16384
failat 21
$floppydevice:C/AddBuffers >NIL: DF0: 200
resident $floppydevice:C/Assign PURE
resident $floppydevice:C/Copy PURE
resident $floppydevice:C/Delete PURE
resident $floppydevice:C/Execute PURE
resident $floppydevice:C/MakeDir PURE
resident $floppydevice:C/Protect PURE
resident $floppydevice:C/Search PURE 
resident $floppydevice:C/Wait PURE 
resident $floppydevice:C/Which PURE 
resident $floppydevice:C/Mount PURE 
MakeDir RAM:Clipboards RAM:ENV RAM:ENV/Sys
Assign >NIL: ENV: RAM:Env
SetEnv TZ MST7


; Fail, if user assign doesn't exist
IF NOT EXISTS S:User-Assign
  echo "Error: User assign doesn't exist!"
  SKIP fail
ENDIF
execute S:User-Assign


; Load system commands resident 
resident SYSTEMDIR:C/Reboot PURE 
resident SYSTEMDIR:C/UnZip PURE 
resident SYSTEMDIR:C/UAEquit PURE 


; Create temp directory, if it doesn't exist
IF NOT EXISTS "SYSTEMDIR:HstWBInstaller/Temp/"
  makedir >NIL: "SYSTEMDIR:HstWBInstaller/Temp"
ENDIF


; Mount and assign FMS 
assign FMS: SYSTEMDIR:HstWBInstaller/Temp
Mount FF0:


; Clear screen
echo "*ec" 


echo "Automate Installation"
echo "---------------------"
echo ""
echo "For installation through WinUAE, following directories can"
echo "be added to automate installation of Workbench 3.1 and"
echo "Kickstart roms:"
echo "- Device name WORKBENCHDIR with Workbench 3.1 adf files."
echo "- Device name KICKSTARTDIR with Kickstart rom files."
echo ""
echo "Automation status:"

; Check if WORKBENCHDIR: exists and print message
Assign >NIL: EXISTS WORKBENCHDIR:
IF NOT WARN
  echo "- WORKBENCHDIR: Present! Install Workbench from adf."
ELSE
  echo "- WORKBENCHDIR: Not present! Install Workbench from disks."
ENDIF

; Check if KICKSTARTDIR: exists and print message
Assign >NIL: EXISTS KICKSTARTDIR:
IF NOT WARN
  echo "- KICKSTARTDIR: Present! Install Kickstart rom files."
ELSE
  echo "- KICKSTARTDIR: Not present! Skip Kickstart rom installation."
ENDIF

echo ""
echo "If these directories are not present, they can be added in"
echo "WinUAE and reset to restart installation will detect them."
echo ""
ask "Press ENTER to continue"


; Clear screen
echo "*ec" 


; Run Install-Workbench-Adf, if WORKBENCHDIR: exists
Assign >NIL: EXISTS WORKBENCHDIR:
IF NOT WARN
  execute "SYSTEMDIR:HstWBInstaller/Install-Workbench-Adf"
ELSE
  execute "SYSTEMDIR:HstWBInstaller/Install-Workbench-Disk"
ENDIF


; Run Install-Kickstart-Rom, if KICKSTARTDIR: exists
Assign >NIL: EXISTS KICKSTARTDIR:
IF NOT WARN
  execute "SYSTEMDIR:HstWBInstaller/Install-Kickstart-Rom"
ENDIF


; Run Install-Packages, if it exists
IF EXISTS "SYSTEMDIR:HstWBInstaller/Install-Packages"
  execute "SYSTEMDIR:HstWBInstaller/Install-Packages"
ENDIF


; Unmount and remove FMS assign 
assign FF0: dismount
assign FMS: SYSTEMDIR:HstWBInstaller/Temp REMOVE


; Delete HstWB Installer directory
echo ""
echo "Deleting HstWB Installer files..."
delete >NIL: "SYSTEMDIR:HstWBInstaller" ALL


; Check if disk is present in floppy device, if present go back to eject disk
LAB ejectdisk
DiskInDrive $floppydevice:
IF NOT WARN
  echo ""
  echo "Please eject disk from $floppydevice:"
  echo ""
  ask "Press ENTER to continue"
  SKIP ejectdisk back
ENDIF


; Clear screen
echo "*ec" 


; Installation complete
echo ""
echo "Installation Complete"
echo "---------------------"
echo ""
echo "HstWB Installer has completed installation process and"
echo "removed files used during installation."
echo ""
echo "Please wait 10 seconds before restarting to allow file"
echo "system to write changes to disk. Continue will reboot"
echo "the system in 10 seconds."
echo ""
ask "Press ENTER to continue"
echo ""
echo "Rebooting in 10 seconds..."
wait 10
reboot


; Fail
LAB fail
echo ""
echo "Installation failed."


; End
LAB end
