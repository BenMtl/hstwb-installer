.KEY eabwhdloaddir/a
.BRA {
.KET }

; Build EAB WHDLoad Install
; -------------------------
;
; Date: 2018-04-11
; Author: Henrik Noerfjand Stengaard
;
; An AmigaDOS script to build install scripts for EAB WHDLoad

; fail, if eab whdload directory doesn't exist
IF NOT EXISTS "{eabwhdloaddir}"
  echo "Error: EAB WHDLoad directory '{eabwhdloaddir}' doesn't exist"
  quit 20
ENDIF

; add eab whdload dir assign
Assign EABWHDLOADDIR: "{eabwhdloaddir}"

; delete temp eab whdload install directory, if it exists
IF EXISTS SYS:T/_eab-whdload-install
  Delete SYS:T/_eab-whdload-install ALL >NIL:
ENDIF

; make temp eab whdload install directory
MakePath SYS:T/_eab-whdload-install >NIL:

; search for *.lha and *.lzx files in eabwhdloaddir:
fsearch EABWHDLOADDIR: PAT="#?.lha" ALL >SYS:T/_eab-whdload-install/files
fsearch EABWHDLOADDIR: PAT="#?.lzx" ALL >>SYS:T/_eab-whdload-install/files 

; alphabetically sort entries
frsort <SYS:T/_eab-whdload-install/files >SYS:T/_eab-whdload-install/files_sorted 


set filescount `wc -l <SYS:T/_eab-whdload-install/files_sorted` 
set fileindex "1"
set lasteabwhdloadindex "$eabwhdloadindex"

echo ""
echo "*e[32m" NOLINE
echo "Building install script for $filescount files:"
echo "*e[0m*e[1m" NOLINE 


; get next entry file
LAB nextfile

; end, if entry index is greater than entries count
IF $fileindex gt $filescount VAL
  SKIP end
ENDIF

; get next entry file from entry files
set eabwhdloadfile ""
echo "$fileindex" >T:_fileindex
set fileindexregexp "`sed "s/\(.\)*$/\1q;d/" T:_fileindex`"
set eabwhdloadfile "`sed "$fileindexregexp" "SYS:T/_eab-whdload-install/files_sorted"`"

; goto end, if entry file is empty
IF "$eabwhdloadfile" EQ ""
  SKIP BACK nextfile
ENDIF

echo "$eabwhdloadfile"

echo "$eabwhdloadfile" >T:_eabwhdloadfile
Rep T:_eabwhdloadfile "EABWHDLOADDIR:" ""


; detect language
; ---------------
LAB detectlanguage

; set language to en by default
set language "en"

search T:_eabwhdloadfile "_de_" >NIL:
IF $RC EQ 0 VAL
  set language "de"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_de." >NIL:
IF $RC EQ 0 VAL
  set language "de"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_fr_" >NIL:
IF $RC EQ 0 VAL
  set language "fr"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_fr." >NIL:
IF $RC EQ 0 VAL
  set language "fr"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_it_" >NIL:
IF $RC EQ 0 VAL
  set language "it"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_it." >NIL:
IF $RC EQ 0 VAL
  set language "it"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_se_" >NIL:
IF $RC EQ 0 VAL
  set language "se"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_se." >NIL:
IF $RC EQ 0 VAL
  set language "se"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_pl_" >NIL:
IF $RC EQ 0 VAL
  set language "pl"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_pl." >NIL:
IF $RC EQ 0 VAL
  set language "pl"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_es_" >NIL:
IF $RC EQ 0 VAL
  set language "es"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_es." >NIL:
IF $RC EQ 0 VAL
  set language "es"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_cz_" >NIL:
IF $RC EQ 0 VAL
  set language "cz"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_cz." >NIL:
IF $RC EQ 0 VAL
  set language "cz"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_dk_" >NIL:
IF $RC EQ 0 VAL
  set language "dk"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_dk." >NIL:
IF $RC EQ 0 VAL
  set language "dk"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_fi_" >NIL:
IF $RC EQ 0 VAL
  set language "fi"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_fi." >NIL:
IF $RC EQ 0 VAL
  set language "fi"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_gr_" >NIL:
IF $RC EQ 0 VAL
  set language "gr"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_gr." >NIL:
IF $RC EQ 0 VAL
  set language "gr"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_cv_" >NIL:
IF $RC EQ 0 VAL
  set language "cv"
  SKIP detecthardware
ENDIF

search T:_eabwhdloadfile "_cv." >NIL:
IF $RC EQ 0 VAL
  set language "cv"
  SKIP detecthardware
ENDIF


; detect hardware
; ---------------
LAB detecthardware

; set hardware to ocs by default
set hardware "ocs"

search T:_eabwhdloadfile "_aga_" >NIL:
IF $RC EQ 0 VAL
  set hardware "aga"
  SKIP buildinstall
ENDIF

search T:_eabwhdloadfile "_aga." >NIL:
IF $RC EQ 0 VAL
  set hardware "aga"
  SKIP buildinstall
ENDIF

search T:_eabwhdloadfile "_cd32_" >NIL:
IF $RC EQ 0 VAL
  set hardware "cd32"
  SKIP buildinstall
ENDIF

search T:_eabwhdloadfile "_cd32." >NIL:
IF $RC EQ 0 VAL
  set hardware "cd32"
  SKIP buildinstall
ENDIF

search T:_eabwhdloadfile "_cdtv_" >NIL:
IF $RC EQ 0 VAL
  set hardware "cdtv"
  SKIP buildinstall
ENDIF

search T:_eabwhdloadfile "_cdtv." >NIL:
IF $RC EQ 0 VAL
  set hardware "cdtv"
  SKIP buildinstall
ENDIF


; build install
; -------------
LAB buildinstall

; get entry index
set eabwhdloadfilelc "`tr [A-Z] [a-z] <T:_eabwhdloadfile`"
echo "$eabwhdloadfilelc" >T:_eabwhdloadfilelc
cut -c 1-1 T:_eabwhdloadfilelc >T:_eabwhdloadindex
set eabwhdloadindex "`sed "2q;d" "T:_eabwhdloadindex"`"

; write entry index progress, if different from current entry index and update current entry index
IF NOT "$lasteabwhdloadindex" EQ "$eabwhdloadindex"
  echo "$eabwhdloadindex..."
  set lasteabwhdloadindex "$eabwhdloadindex"
ENDIF

; 
echo "IF EXISTS *"$eabwhdloadfile*"" >>"SYS:T/_eab-whdload-install/install_$language_$hardware"

; add extract lha entry to install script
search T:_eabwhdloadfile ".lha" >NIL:
IF $RC EQ 0 VAL
  echo "  lha -m1 x *"$eabwhdloadfile*" *"*$installdir/*"" >>"SYS:T/_eab-whdload-install/install_$language_$hardware"
ENDIF

; add extract lzx entry to install script
search T:_eabwhdloadfile ".lzx" >NIL:
IF $RC EQ 0 VAL
  echo "  lzx x *"$eabwhdloadfile*" *"*$installdir/*"" >>"SYS:T/_eab-whdload-install/install_$language_$hardware"
ENDIF

echo "ENDIF" >>"SYS:T/_eab-whdload-install/install_$language_$hardware"


set fileindex `eval $fileindex + 1`


; end, if entry line number is greater than 100
IF $fileindex EQ 100 VAL
  SKIP end
ENDIF

lzx x 


SKIP BACK nextfile


; End
; ---
LAB end

echo "Done."

; remove eab whdload dir assign
Assign EABWHDLOADDIR: "{eabwhdloaddir}" REMOVE
