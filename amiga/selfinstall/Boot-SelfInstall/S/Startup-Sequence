; Startup Sequence for HstWB Self Install
; ---------------------------------------
;
; Date: 2017-08-10
; Author: Henrik Noerfjand Stengaard


; Load patched scsi.device v43.45
LoadModule DEVS:scsi.device


; Clear screen
echo "*ec" 


; Welcome message
echo "HstWB Installer"
echo "---------------"
echo ""
echo "Welcome to HstWB Installer, an installer which automates"
echo "installation of Amiga OS 3.9, Workbench 3.1, Kickstart roms"
echo "and packages with additional content."
echo ""
echo "As Amiga OS 3.9, Workbench 3.1 and Kickstart roms are still"
echo "under license and sold commercially, these are not"
echo "included and must be provided during installation process."
echo ""
echo "Amiga OS 3.9 can be bought from either http://www.vesalia.de"
echo "or http://www.amigakit.com/."
echo ""
echo "Cloanto Amiga Forever Plus Edition contains both"
echo "Workbench 3.1 and Kickstart roms and can be bought from"
echo "https://www.amigaforever.com."
echo ""
ask "Press ENTER to continue"


; Clear screen
echo "*ec" 


; Workbench message
echo "Workbench 3.1 Disk"
echo "------------------"
echo ""
echo "Workbench system files are required for the"
echo "installation process and these will be loaded from"
echo "Workbench 3.1 disk."
echo ""
echo "Floppy device to use will now be autodetected by"
echo "checking if a disk is inserted in any floppy device."


; Print insert Workbench disk
LAB insertworkbenchdisk
echo ""
echo "Please insert Workbench 3.1 Workbench disk in any"
echo "floppy device."
echo ""
ask "Press ENTER to continue"
echo ""


; Using fail at 255 for DiskInDrive to fail silently
failat 255

; Check if disk is present in DF0:
DiskInDrive >NIL: DF0:
IF NOT WARN
  set floppydevice "DF0"
  SKIP checkworkbenchdisk
ENDIF

; Check if disk is present in DF1:
DiskInDrive >NIL: DF1:
IF NOT WARN
  set floppydevice "DF1"
  SKIP checkworkbenchdisk
ENDIF

; Check if disk is present in DF2:
DiskInDrive >NIL: DF2:
IF NOT WARN
  set floppydevice "DF2"
  SKIP checkworkbenchdisk
ENDIF

; Check if disk is present in DF3:, if not go back to insert workbench disk
DiskInDrive >NIL: DF3:
IF NOT WARN
  set floppydevice "DF3"
ELSE
  echo "No disk is inserted in any floppy device!"
  SKIP insertworkbenchdisk back
ENDIF


; Check Workbench 3.1 Workbench disk is present in DF0, if not go back to insert workbench disk
LAB checkworkbenchdisk
failat 21

IF NOT EXISTS $floppydevice:C/Which
  echo "Workbench disk is not valid!"
  SKIP insertworkbenchdisk back
ENDIF
IF NOT EXISTS $floppydevice:C/Assign
  echo "Workbench disk is not valid!"
  SKIP insertworkbenchdisk back
ELSE
  $floppydevice:C/Assign >NIL: T: RAM:
ENDIF
IF NOT "`$floppydevice:c/which $floppydevice:`" EQ "Workbench3.1:"
  echo "Workbench disk is not valid!"
  SKIP insertworkbenchdisk back
ENDIF 


; Detected floppy device message
echo "Detected Workbench disk in floppy device $floppydevice:"
echo ""
ask "Press ENTER to continue"


; Set stack, failat and load basic commands resident 
stack 16384
failat 21
$floppydevice:C/AddBuffers >NIL: DF0: 200
resident $floppydevice:C/Assign PURE
resident $floppydevice:C/Copy PURE
resident $floppydevice:C/Delete PURE
resident $floppydevice:C/Execute PURE
resident $floppydevice:C/Rename PURE
resident $floppydevice:C/MakeDir PURE
resident $floppydevice:C/Protect PURE
resident $floppydevice:C/Search PURE 
resident $floppydevice:C/Wait PURE 
resident $floppydevice:C/Which PURE 
resident $floppydevice:C/Mount PURE
resident $floppydevice:C/Type PURE
resident $floppydevice:C/RequestChoice PURE
MakeDir RAM:Clipboards RAM:ENV RAM:ENV/Sys
Assign >NIL: ENV: RAM:Env
Copy ENVARC:~(#?.info) ENV: ALL QUIET
SetEnv TZ MST7


; Add alias
Alias cls "Echo NOLINE *"*E[0;0H*E[J*" " 


; Fail, if assign hstwb installer doesn't exist
IF NOT EXISTS S:Assign-HstWB-Installer
  echo "Error: Assign hstwb installer doesn't exist!"
  SKIP fail
ENDIF
execute S:Assign-HstWB-Installer


; Add assigns to installdir
Assign >NIL: C: INSTALLDIR:C ADD
Assign >NIL: Devs: INSTALLDIR:Devs ADD
Assign >NIL: L: INSTALLDIR:L ADD
Assign >NIL: Libs: INSTALLDIR:Libs ADD
Assign >NIL: Prefs: INSTALLDIR:Prefs ADD


; Fail, if HSTWBINSTALLERDIR: device name doesn't exist
Assign >NIL: EXISTS HSTWBINSTALLERDIR:
IF WARN
  echo "Error: HSTWBINSTALLERDIR: device name doesn't exist!"
  SKIP fail
ENDIF


; Load commands resident 
resident INSTALLDIR:C/Reboot PURE 
resident INSTALLDIR:C/UnZip PURE 
resident INSTALLDIR:C/UAEquit PURE 
resident INSTALLDIR:C/MakePath PURE 


; Create install prefs drawer, if it doesn't exist
IF NOT EXISTS INSTALLDIR:Prefs
  makepath INSTALLDIR:Prefs
ENDIF


; Run Patch Installation
execute "INSTALLDIR:S/Patch-Installation"


; Run Prepare Self Install
execute "INSTALLDIR:S/Prepare-Self-Install"


; Run Install-Start
execute "INSTALLDIR:S/Install-Start"


; Clear screen
echo "*ec" 


echo "Eject disk"
echo "----------"
echo ""
echo "A system reboot is required for installation process"
echo "to continue and floppy disk must be ejected."


; Check if disk is present in floppy device, if present go back to eject disk
LAB ejectdisk
DiskInDrive $floppydevice:
IF NOT WARN
  echo ""
  echo "Please eject disk from $floppydevice:"
  echo ""
  ask "Press ENTER to continue"
  SKIP ejectdisk back
ENDIF


; Delete DiskInDrive, if it exists
IF EXISTS SYS:C/DiskInDrive
  Delete >NIL: SYS:C/DiskInDrive
ENDIF


; Remove assigns from installdir
Assign >NIL: C: INSTALLDIR:C REMOVE
Assign >NIL: Devs: INSTALLDIR:Devs REMOVE
Assign >NIL: L: INSTALLDIR:L REMOVE
Assign >NIL: Libs: INSTALLDIR:Libs REMOVE
Assign >NIL: Prefs: INSTALLDIR:Prefs REMOVE


; Run Install-Complete
execute "INSTALLDIR:S/Install-Complete"

SKIP end


; Fail
LAB fail
echo ""
echo "Installation failed."
quit


; End
LAB end