; Prepare Self Install
; --------------------
;
; Date: 2018-11-30
; Author: Henrik Noerfjand Stengaard
;
; An AmigaDOS script to prepare self install by detecting precense of CD drive, Amiga OS 3.9 iso and Boing Bags to configure installation flow.


; Clear screen
cls 

echo "*e[32m" NOLINE
echo "Device Names Overview"
echo "*e[0m*e[1m" NOLINE
echo "---------------------"
echo "*e[0m" NOLINE
echo ""
echo "Using UAE emulator HstWB-Installer can detect and use"
echo "following device names for installation of Amiga OS 3.9,"
echo "3.1.4, 3.1, Kickstart roms and user packages:"
echo "- *e[1mCD0: CD drive with Amiga OS 3.9 cd-rom."
echo "- *e[1mAMIGAOSDIR*e[0m: Directory with Amiga 3.1.4 or 3.1 adf files,"
echo "  Amiga OS 3.9 iso and boing bag lha files."
echo "  *e[1mNote: Directory must be read/write, if installing Amiga"
echo "  OS 3.9 from iso (required by filedisk.device).*e[0m"
echo "- *e[1mKICKSTARTDIR*e[0m: Directory with Kickstart rom files."
echo "- *e[1mUSERPACKAGESDIR*e[0m: Directory with user packages."
echo ""
ask "Press ENTER to continue"


; Clear screen
cls 
echo "*e[32m" NOLINE
echo "Device Names Status"
echo "*e[0m*e[1m" NOLINE
echo "-------------------"
echo "*e[0m" NOLINE
echo ""
echo "HstWB-Installer has detected device names with"
echo "following status:"


; set amigaosdir to 1, if device name AMIGAOSDIR: exists
set amigaosdir "0"
Assign >NIL: EXISTS AMIGAOSDIR:
IF NOT WARN
  ; Set fail at 255 for DiskInDrive to fail silently
  failat 255

  ; set amigaosdir to 1, if device AMIGAOSDIR: is mapped to a directory
  DiskInDrive >NIL: AMIGAOSDIR:
  IF NOT WARN
    set amigaosdir "1"
  ENDIF

  ; Set fail at 21
  failat 21
ENDIF


; Check for amiga os 3.9 iso and boing bags, if AMIGAOSDIR: device name exists
IF $amigaosdir EQ 1 VAL
  ; run detect amiga os 3.9, if it exists
  IF EXISTS "INSTALLDIR:S/Amiga-OS-3.9/Detect-Amiga-OS-3.9"
    execute "INSTALLDIR:S/Amiga-OS-3.9/Detect-Amiga-OS-3.9"
  ENDIF

  ; run detect amiga os 3.1.4 adf, if it exists
  IF EXISTS "INSTALLDIR:S/Amiga-OS-3.1.4/Detect-Amiga-OS-3.1.4-Adf"
    execute "INSTALLDIR:S/Amiga-OS-3.1.4/Detect-Amiga-OS-3.1.4-Adf"
  ENDIF

  ; run detect amiga os 3.1 adf, if it exists
  IF EXISTS "INSTALLDIR:S/Amiga-OS-3.1/Detect-Amiga-OS-3.1-Adf"
    execute "INSTALLDIR:S/Amiga-OS-3.1/Detect-Amiga-OS-3.1-Adf"
  ENDIF
ELSE
  echo "- *e[1mAMIGAOSDIR*e[0m: Not present! Skip Amiga OS 3.9 installation"
  echo "  from iso and Boing Bag updates."
ENDIF
echo ""
ask "Press ENTER to continue"

; create detect amiga os log
echo "" NOLINE >INSTALLDIR:Temp/Detect-Amiga-OS.log
IF EXISTS INSTALLDIR:Temp/Amiga-OS-390.log
  type INSTALLDIR:Temp/Amiga-OS-390.log >>INSTALLDIR:Temp/Detect-Amiga-OS.log
  echo "" >>INSTALLDIR:Temp/Detect-Amiga-OS.log
ENDIF
IF EXISTS INSTALLDIR:Temp/Amiga-OS-314-Adf.log
  type INSTALLDIR:Temp/Amiga-OS-314-Adf.log >>INSTALLDIR:Temp/Detect-Amiga-OS.log
  echo "" >>INSTALLDIR:Temp/Detect-Amiga-OS.log
ENDIF
IF EXISTS INSTALLDIR:Temp/Amiga-OS-310-Adf.log
  type INSTALLDIR:Temp/Amiga-OS-310-Adf.log >>INSTALLDIR:Temp/Detect-Amiga-OS.log
  echo "" >>INSTALLDIR:Temp/Detect-Amiga-OS.log
ENDIF


; build amiga os menu
execute INSTALLDIR:S/Build-Amiga-OS-Menu INSTALLDIR:Temp/Amiga-OS-Menu

; execute amiga os menu
execute INSTALLDIR:Temp/Amiga-OS-Menu

quit

; Confirm install workbench 3.1, if installing amiga os 3.9
IF $amigaos39 EQ 1 VAL
  ; Install Workbench 3.1
  set installworkbench `RequestChoice "Install Workbench 3.1" "Do you want to install Workbench 3.1*Nbefore installing Amiga OS 3.9?" "Yes|No"`
ELSE
  set installworkbench "1"
ENDIF

; Check workbench, if installing workbench
IF $installworkbench EQ 1 VAL
  ; Create install workbench prefs
  echo "" >INSTALLDIR:Prefs/Install-Workbench

  ; Check if WORKBENCHDIR: and set workbench
  set workbench "0"
  Assign >NIL: EXISTS WORKBENCHDIR:
  IF NOT WARN
    ; Set fail at 255 for DiskInDrive to fail silently
    failat 255

    ; Set workbench to 1, if device WORKBENCHDIR: is mapped to a directory
    DiskInDrive >NIL: WORKBENCHDIR:
    IF NOT WARN
      set workbench "1"
    ENDIF

    ; Set fail at 21
    failat 21
  ENDIF

  ; Print workbench status
  IF $workbench EQ 1 VAL
    echo "- WORKBENCHDIR: Present! Install Workbench 3.1 from adf."
  ELSE
    echo "- WORKBENCHDIR: Not present! Install Workbench 3.1 from"
    echo "  disks."
  ENDIF 
ELSE
  echo "- WORKBENCHDIR: Ignored! Skip Workbench 3.1 installation."
ENDIF


; Check if KICKSTARTDIR: and set kickstart
set kickstart "0"
Assign >NIL: EXISTS KICKSTARTDIR:
IF NOT WARN
  ; Set fail at 255 for DiskInDrive to fail silently
  failat 255

  ; Set workbench to 1, if device KICKSTARTDIR: is mapped to a directory
  DiskInDrive >NIL: KICKSTARTDIR:
  IF NOT WARN
    set kickstart "1"
  ENDIF

  ; Set fail at 21
  failat 21
ENDIF


; Print kickstart status and create install kickstart prefs, if KICKSTARTDIR: exists
IF $kickstart EQ 1 VAL
  ; Create install kickstart prefs
  echo "" >INSTALLDIR:Prefs/Install-Kickstart
  echo "- *e[1mKICKSTARTDIR*e[0m: Present! Install Kickstart rom files."
ELSE
  echo "- *e[1mKICKSTARTDIR*e[0m: Not present! Skip Kickstart rom installation."
ENDIF


; Check if USERPACKAGESDIR: and set userpackages
set userpackages "0"
Assign >NIL: EXISTS USERPACKAGESDIR:
IF NOT WARN
  ; Set fail at 255 for DiskInDrive to fail silently
  failat 255

  ; Set userpackages to 1, if device USERPACKAGESDIR: is mapped to a directory
  DiskInDrive >NIL: USERPACKAGESDIR:
  IF NOT WARN
    set userpackages "1"
  ENDIF

  ; Set fail at 21
  failat 21
ENDIF


; Print user packges dir status and create install user packages prefs, if USERPACKAGESDIR: exists
IF $userpackages EQ 1 VAL
  echo "- *e[1mUSERPACKAGESDIR*e[0m: Present! Install user packages."
ELSE
  echo "- *e[1mUSERPACKAGESDIR*e[0m: Not present! Skip user package"
  echo "  installation."
ENDIF


; Create backup of mountlist, if it doesn't exist. Otherwise overwrite mountlist with backup.
IF NOT EXISTS INSTALLDIR:Devs/Mountlist.bak
  Copy >NIL: INSTALLDIR:Devs/Mountlist INSTALLDIR:Devs/Mountlist.bak
ELSE
  Copy >NIL: INSTALLDIR:Devs/Mountlist.bak INSTALLDIR:Devs/Mountlist
ENDIF


; Replace os39isofilename placeholder in mountlist 
IF NOT "$amigaos39isofile" EQ ""
  rep INSTALLDIR:Devs/Mountlist "AMIGAOSDIR:[*$OS39IsoFileName]" "$amigaos39isofile"
ELSE
  rep INSTALLDIR:Devs/Mountlist "AMIGAOSDIR:[*$OS39IsoFileName]" ""
ENDIF


; Install amiga os 3.9, if amigaos39 is 1
IF $amigaos39 EQ 1 VAL 
  ; Create install amiga os 3.9 prefs
  echo "" >INSTALLDIR:Prefs/Install-Amiga-OS-3.9

  ; Print amiga os 3.9 iso file, if present
  IF NOT "$amigaos39isofile" EQ ""
    echo ""
    echo "*e[1mUsing Amiga OS 3.9 iso file:*e[0m"
    echo "$amigaos39isofile"
  ENDIF

  ; Examine if boing bag files exists
  IF EXISTS T:_boingbagfiles
    set boingbagfilescount `wc -l <T:_boingbagfiles`

    ; Install boing bags, if one or more boing bag files exists
    echo ""
    IF $boingbagfilescount gt 0 VAL
      ; Create install boing bags prefs
      echo "" >INSTALLDIR:Prefs/Install-BoingBags

      ; Print boing bag files
      echo "*e[1mUsing Boing Bag file(s):*e[0m"
      type T:_boingbagfiles
    ELSE
      echo "Boing Bag file(s) doesn't exist. Skip Boing Bags"
      echo "installation."
    ENDIF
  ENDIF
ENDIF

echo ""
IF $userpackages EQ 0 VAL
  echo "Continue will show self install ready."
  echo ""
  ask "Press ENTER to continue"
  SKIP selfinstallready
ENDIF

echo "Continue will show user package status."
echo ""
ask "Press ENTER to continue"


; Print user packages status
cls 
echo "*e[32m" NOLINE
echo "User Packages Status"
echo "*e[0m*e[1m" NOLINE
echo "--------------------"
echo "*e[0m" NOLINE

; Run find user packages
Execute INSTALLDIR:S/Find-User-Packages INSTALLDIR:Prefs/User-Packages

; Check if user packages prefs contains any user packages
set userpackagescount `wc -l <INSTALLDIR:Prefs/User-Packages`
IF $userpackagescount GT 0 VAL
  ; Create install user packages prefs
  echo "" >INSTALLDIR:Prefs/Install-User-Packages

  ; Run prepare user packages
  echo ""
  Copy >NIL: INSTALLDIR:Prefs/User-Packages T:User-Packages
  Execute INSTALLDIR:S/Prepare-User-Packages T:User-Packages INSTALLDIR:S/Install-User-Packages INSTALL
  Delete >NIL: T:User-Packages
ELSE
  echo ""
  echo "*e[1mNo user packages found, skipping user package installation!*e[22m"
ENDIF

echo ""
echo "Continue will show self install ready."
echo ""
ask "Press ENTER to continue"


; Self install ready
; ------------------
LAB selfinstallready
cls 
echo "*e[32m" NOLINE
echo "Self Install Ready"
echo "*e[0m*e[1m" NOLINE
echo "------------------"
echo "*e[0m" NOLINE
echo ""
echo "Self install is ready to start installation process."
echo ""
echo "This is last chance to adjust device names, files used"
echo "during installation before starting self install."
echo ""
echo "Adjust device names, directories and files now and reset"
echo "to detect changes."
echo ""
echo "When self install has started, it's no longer possible to"
echo "reset installation process."
echo ""
echo "Continue will start self install."
echo ""
ask "Press ENTER to continue"