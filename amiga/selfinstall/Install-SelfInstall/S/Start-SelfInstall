; Start Self Install
; ------------------
;
; Date: 2018-12-06
; Author: Henrik Noerfjand Stengaard


; fail, if HSTWBINSTALLERDIR: device doesn't exist
Assign >NIL: EXISTS HSTWBINSTALLERDIR:
IF WARN
  echo "*e[1mError: Self install HSTWBINSTALLERDIR: device doesn't exist!*e[0m"
  SKIP fail
ENDIF

; fail, if INSTALLDIR: device doesn't exist
Assign >NIL: EXISTS INSTALLDIR:
IF WARN
  echo "*e[1mError: Self install INSTALLDIR: device doesn't exist!*e[0m"
  SKIP fail
ENDIF

; load commands resident 
Resident >NIL: "INSTALLDIR:C/MakePath" PURE 
Resident >NIL: "INSTALLDIR:C/Reboot" PURE 
Resident >NIL: "INSTALLDIR:C/TotalReset" PURE
Resident >NIL: "INSTALLDIR:C/UAEquit" PURE
Resident >NIL: "INSTALLDIR:C/LhA" PURE
Resident >NIL: "INSTALLDIR:C/UNLZX" PURE
Resident >NIL: "INSTALLDIR:C/UnZip" PURE


; create hstwbinstalldir temp directory, if it doesn't exist. otherwise delete all files from hstwbinstalldir temp directory
IF NOT EXISTS "HSTWBINSTALLERDIR:Temp/"
  MakePath >NIL: "HSTWBINSTALLERDIR:Temp"
ELSE
  Delete >NIL: "HSTWBINSTALLERDIR:Temp/#?" ALL
ENDIF

; create installdir temp directory, if it doesn't exist. otherwise delete all files from installdir temp directory
IF NOT EXISTS "INSTALLDIR:Temp/"
  MakePath >NIL: "INSTALLDIR:Temp"
ELSE
  Delete >NIL: "INSTALLDIR:Temp/#?" ALL
ENDIF

; create install prefs directory, if it doesn't exist. otherwise delete all files from install prefs directory
IF NOT EXISTS "INSTALLDIR:Prefs/"
  MakePath >NIL: "INSTALLDIR:Prefs"
ELSE
  Delete >NIL: "INSTALLDIR:Prefs/#?" ALL
ENDIF


; run prepare self install
execute "INSTALLDIR:S/Prepare-SelfInstall"

; run remove self install
execute "INSTALLDIR:S/Remove-SelfInstall"

; run install start
execute "INSTALLDIR:S/Install-Start"

; goto self install complete, if floppy device is empty
IF "$floppydevice" EQ ""
  SKIP selfinstallcomplete
ENDIF


; print eject disk message
cls
echo "*e[32m" NOLINE
echo "Eject disk"
echo "*e[0m*e[1m" NOLINE
echo "----------"
echo "*e[22m" NOLINE
echo ""
echo "A system reboot is required for installation process"
echo "to continue and any floppy disk must be ejected."

; eject disk
LAB ejectdisk

; check if disk is present in floppy device DF0:, if present go back to eject disk
DiskInDrive DF0:
IF $RC EQ 0 VAL
  echo ""
  echo "Please eject disk from DF0:"
  echo ""
  ask "Press ENTER to continue"
  SKIP ejectdisk back
ENDIF

; check if disk is present in floppy device DF1:, if present go back to eject disk
DiskInDrive DF1:
IF $RC EQ 0 VAL
  echo ""
  echo "Please eject disk from DF1:"
  echo ""
  ask "Press ENTER to continue"
  SKIP ejectdisk back
ENDIF

; check if disk is present in floppy device DF2:, if present go back to eject disk
DiskInDrive DF2:
IF $RC EQ 0 VAL
  echo ""
  echo "Please eject disk from DF2:"
  echo ""
  ask "Press ENTER to continue"
  SKIP ejectdisk back
ENDIF

; check if disk is present in floppy device DF3:, if present go back to eject disk
DiskInDrive DF3:
IF $RC EQ 0 VAL
  echo ""
  echo "Please eject disk from DF3:"
  echo ""
  ask "Press ENTER to continue"
  SKIP ejectdisk back
ENDIF


; self install complete
; ---------------------
LAB selfinstallcomplete

; remove assigns from installdir
Assign >NIL: S: INSTALLDIR:S REMOVE
Assign >NIL: C: INSTALLDIR:C REMOVE
Assign >NIL: Devs: INSTALLDIR:Devs REMOVE
Assign >NIL: L: INSTALLDIR:L REMOVE
Assign >NIL: Libs: INSTALLDIR:Libs REMOVE
Assign >NIL: Prefs: INSTALLDIR:Prefs REMOVE

; run Install-Complete
execute "INSTALLDIR:S/Install-Complete"

SKIP end


; fail
LAB fail
echo ""
echo "Installation failed."
quit


; end
LAB end
