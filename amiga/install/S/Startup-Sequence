; Startup Sequence for HstWB Installer
; ------------------------------------
;
; Date: 2019-03-14
; Author: Henrik Noerfjand Stengaard
;
; AmigaDOS script for HstWB Installer install


; add alias
Alias cls "Echo NOLINE *"*E[0;0H*E[J*" " 

; set failat to 21
FailAt 21

; fail, if exec.library is less than v40
Version >NIL: exec.library 40
IF WARN
  echo "*e[1mError: HstWB Installer requires minimum Kickstart 3.1 rom!*e[0m"
  SKIP fail
ENDIF

; load patched scsi.device v43.45, if it exists
IF EXISTS DEVS:scsi.device
  ; Load scsi.device, if current loaded scsi.device is less than v43.45
  Version >NIL: "scsi.device" 43 45
  IF WARN
    LoadModule DEVS:scsi.device
  ENDIF
ENDIF

; set stack
stack 16384

; add assigns from S:AssignList using AssPlus
MakePath >NIL: RAM:Env
AssPlus >NIL:

; copy hstwb installer log to system dir, if it exists
IF EXISTS INSTALLDIR:hstwb-installer.log
  Copy >NIL: INSTALLDIR:hstwb-installer.log SYSTEMDIR:hstwb-installer.log
ENDIF


; startup message
; ---------------
cls 
echo "*e[32m" NOLINE
echo "HstWB Installer v[$VersionText]"
echo "*e[0m*e[1m" NOLINE
echo "-----------------[$VersionDashes]"
echo "*e[0m" NOLINE
echo ""
echo "HstWB Installer is now running install."
echo ""
echo "*e[1mLoading Amiga OS system files:*e[0m"
echo "Amiga OS 3.9 cd-rom in CD0:..."

; set amiga os 3.1.4 to 0
set amigaos314 "0"

; set failat to 255 for diskindrive to fail silently
failat 255

; goto find amiga os disk, if CD0: device is not present
DiskInDrive >NIL: CD0:
IF NOT $RC EQ 0 VAL
  ; log
  echo "CD0: device is not present" >>INSTALLDIR:Temp/Amiga-OS-System-Files.log

  ; set failat to 21
  failat 21

  SKIP amigaosdisk
ENDIF

; goto find amiga os disk, if AmigaOS3.9: device is not present
DiskInDrive >NIL: AmigaOS3.9:
IF NOT $RC EQ 0 VAL
  ; log
  echo "Amiga OS 3.9 cd-rom is not present in CD0: device" >>INSTALLDIR:Temp/Amiga-OS-System-Files.log

  ; set failat to 21
  failat 21

  SKIP amigaosdisk
ENDIF

; set failat to 21
failat 21

; goto find amiga os disk, if AmigaOS3.9:EMERGENCY-BOOT doesn't exist
IF NOT EXISTS "AmigaOS3.9:EMERGENCY-BOOT/C"
  SKIP amigaosdisk
ENDIF

; load system files from amiga os 3.9 emergency boot cd-rom
set systemfilesdir "AmigaOS3.9:EMERGENCY-BOOT/C"
SKIP loadsystemfiles


; amiga os disk
; -------------
LAB amigaosdisk

; log
echo "Amiga OS 3.1.4 or 3.1 Workbench disk in DF0:" >>INSTALLDIR:Temp/Amiga-OS-System-Files.log
echo "Amiga OS 3.1.4 or 3.1 Workbench disk in DF0:..."

; set failat to 255 for diskindrive to fail silently
failat 255

; fail, if DF0: device is not present
DiskInDrive >NIL: DF0:
IF NOT $RC EQ 0 VAL
  ; log
  echo "Device DF0: is not present" >>INSTALLDIR:Temp/Amiga-OS-System-Files.log

  echo "*e[1mERROR: Device DF0: is not present!*e[0m"

  ; set failat to 21
  failat 21

  SKIP fail
ENDIF

; set failat to 21
failat 21

; fail, if which doesn't exist in device DF0:
IF NOT EXISTS "DF0:C/Which"
  ; log
  echo "Amiga OS 3.1.4 or 3.1 Workbench disk in floppy device DF0: is not valid" >>INSTALLDIR:Temp/Amiga-OS-System-Files.log

  echo "*e[1mERROR: Amiga OS 3.1.4 or 3.1 Workbench disk in floppy device"
  echo "DF0: is not valid!*e[0m"

  SKIP fail
ENDIF

; set amiga os 3.1.4 to 1, if DF0: volume name is 'Workbench3.1.4'
set volumename "`DF0:C/Which DF0:`"
IF "$volumename" EQ "Workbench3.1.4:"
  set amigaos314 "1"
ENDIF

; load system files from amiga os 3.1.4 or 3.1 workbench disk in DF0: device
set systemfilesdir "DF0:C"


; load system files
; -----------------
LAB loadsystemfiles

; log
echo "Loading Amiga OS system files from '$systemfilesdir'" >>INSTALLDIR:Temp/Amiga-OS-System-Files.log

; load amiga os system files resident
resident "$systemfilesdir/Assign" PURE
resident "$systemfilesdir/Copy" PURE
resident "$systemfilesdir/Delete" PURE
resident "$systemfilesdir/DiskChange" PURE
resident "$systemfilesdir/Eval" PURE
resident "$systemfilesdir/Execute" PURE
resident "$systemfilesdir/List" PURE
resident "$systemfilesdir/Rename" PURE
resident "$systemfilesdir/MakeDir" PURE
resident "$systemfilesdir/Protect" PURE
resident "$systemfilesdir/Search" PURE 
resident "$systemfilesdir/Wait" PURE 
resident "$systemfilesdir/Which" PURE 
resident "$systemfilesdir/Mount" PURE
resident "$systemfilesdir/Type" PURE
resident "$systemfilesdir/RequestChoice" PURE
resident "$systemfilesdir/Version" PURE

MakeDir RAM:Clipboards RAM:ENV/Sys
SetEnv TZ MST7

; goto start install, if amiga os 3.1.4 is 0
IF "$amigaos314" EQ "0" VAL
  SKIP startinstall
ENDIF

; set failat to 255 for diskindrive to fail silently
failat 255

; fail, if DF1: device is not present
DiskInDrive >NIL: DF1:
IF NOT $RC EQ 0 VAL
  ; log
  echo "Device DF1: is not present" >>INSTALLDIR:Temp/Amiga-OS-System-Files.log

  echo "*e[1mERROR: Device DF1: is not present!*e[0m"

  ; set failat to 21
  failat 21

  SKIP fail
ENDIF

; fail, if floppy disk in device DF1: doesn't have volume name 'Install3.1.4'
IF NOT "`Which DF1:`" EQ "Install3.1.4:"
  ; log
  echo "Amiga OS 3.1.4 Install disk in floppy device DF1: is not valid" >>INSTALLDIR:Temp/Amiga-OS-System-Files.log

  echo "*e[1mERROR: Amiga OS 3.1.4 Install disk in floppy device"
  echo "DF1: is not valid!*e[0m"

  SKIP fail
ENDIF

; log
echo "Amiga OS 3.1.4 Install disk in DF1:" >>INSTALLDIR:Temp/Amiga-OS-System-Files.log

echo "Amiga OS 3.1.4 Install disk in DF1:..."

; create sys libs directory, if it doesn't exist
IF NOT EXISTS "SYSTEMDIR:Libs"
  MakePath >NIL: "SYSTEMDIR:Libs"
ENDIF

; copy workbench.library to systemdir and installdir libs
Copy >NIL: "DF1:Libs/Workbench.library" "SYSTEMDIR:Libs"
Copy >NIL: "SYSTEMDIR:Libs/Workbench.library" "INSTALLDIR:Libs"

; copy icon.library to systemdir and installdir libs
Copy >NIL: "DF1:Libs/Icon.library" "SYSTEMDIR:Libs"
Copy >NIL: "SYSTEMDIR:Libs/Icon.library" "INSTALLDIR:Libs"


; start install
; -------------
LAB startinstall

echo "Done"
echo ""
ask "Press ENTER to continue"

; log
echo "" >>SYS:hstwb-installer.log
type "INSTALLDIR:Temp/Amiga-OS-System-Files.log" >>SYS:hstwb-installer.log

; mount kingcon
Mount KCON: from INSTALLDIR:Devs/Mountlist-KingCON
Mount KRAW: from INSTALLDIR:Devs/Mountlist-KingCON

; run start-selfinstall in new kingcon shell
NewShell WINDOW "KCON:0/0/640/300/HstWB Installer v[$VersionText]/AUTO" FROM "INSTALLDIR:S/Start-Install"
EndShell

SKIP end


; fail
; ----
LAB fail
echo ""
echo "Installation failed."
quit


; end
; ---
LAB end
