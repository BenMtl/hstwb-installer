; Validate Disk
; -------------
;
; Date: 2017-07-13
; Author: Henrik Noerfjand Stengaard


; Get devices list
assign >T:_assign
set assignendline `wc -l <T:_assign`
search T:_assign "Devices:" >T:_devices1
sed "s/\([0-9]\) /\1*";/" T:_devices1 >T:_devices2
sed "s/^\(.\)/echo *"\1/" T:_devices2 >T:_devices3
set assignstartline `execute T:_devices3`
set assignstartline `eval $assignstartline + 1` 
getlines T:_assign $assignstartline $assignendline T:_devices
rep T:_devices " " "*N"


; Initialize variables
set deviceslinescount `wc -l <T:_devices`
set deviceslinenumber 1
 

; Iterate through devices
LAB start
IF NOT $deviceslinenumber gt $deviceslinescount VAL
  ; Get line number from ini file
  echo "$deviceslinenumber" >T:_deviceslinenumber
  set deviceslineregexp `sed "s/\(.\)*$/\1q;d/" T:_deviceslinenumber`
  set device "`sed "$deviceslineregexp" "T:_devices"`"

  ; Next, if device is empty or floppy
  IF "$device" EQ ""
    SKIP next
  ENDIF
  IF "$device" EQ "DF0"
    SKIP next
  ENDIF
  IF "$device" EQ "DF1"
    SKIP next
  ENDIF
  IF "$device" EQ "DF2"
    SKIP next
  ENDIF
  IF "$device" EQ "DF3"
    SKIP next
  ENDIF

  ; 
  Version $device: >T:_version
  IF NOT $RC EQ 0 VAL
    SKIP next
  ENDIF

  ; Run diskvalid fix, if device is using pfs3 filesystem
  search T:_version "pfs3" >NIL:
  IF NOT WARN
    echo "Validate disk $device:..."
    diskvalid $device: ANALYSE
    IF $RC EQ 0 VAL
      echo "Done"
    ELSE
      echo "ERROR: Failed to run diskvalid for device $device: using PFS3 filesystem!"
    ENDIF
    echo ""
    ask "Press ENTER to continue"
  ENDIF 

  ; Next
  LAB next
  set deviceslinenumber `eval $deviceslinenumber + 1`
  SKIP BACK start
ENDIF

; Delete temp files
Delete >NIL: T:_assign
Delete >NIL: T:_devices#?
IF EXISTS T:_version
  Delete >NIL: T:_version
ENDIF